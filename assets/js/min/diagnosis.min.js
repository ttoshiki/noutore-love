"use strict";window.addEventListener("load",(function(){Vue.component("diagnosis-form",{template:'\n        <div class="diagnosis__checkbox">\n            <input type="checkbox" :id=id value="id" :checked="checked" @change="callback($event.target.checked)" class="diagnosis__check">\n            <label :for=id class="diagnosis__label">{{ question }}</label>\n        </div>\n    ',props:{id:{type:String,required:!0},question:{type:String},checked:{type:Boolean,default:!1}},methods:{callback(checked){this.$emit("change",checked)}}}),Vue.component("diagnosis-result",{template:'\n        <div class="diagnosis__result">\n            <img :src="typeSource" class="diagnosis__resultTypeImage" alt="タイプイメージ">\n            <span class="diagnosis__resultSpan">※{{ group }}群が一番多かった人</span>\n            <hr class="diagnosis__resultHr" />\n            <slot></slot>\n            <div class="diagnosis__resultImageWrapper">\n              <img :src="charaSource" class="diagnosis__resultCharaImage" alt="タイプイメージ">\n              <a :href="moreLink" class="diagnosis__moreLink" :class="seasonColor">もっと<br class="-pc" />詳しく</a>\n            </div>\n            <hr class="diagnosis__resultHr" />\n            <div class="diagnosis__resultPerson">\n                <img :src="personSource" class="diagnosis__resultPersonImage" :alt="personName">\n                <div class="diagnosis__resultContents">\n                  <p class="diagnosis__resultParagraph">同じ気質の<br />「脳トレ」運営陣は…<br />{{ personName }}です。</p>\n                  <h2 class="diagnosis__resultContentsHeading">得意ジャンル</h2>\n                  <p class="diagnosis__resultParagraph">\n                      <div v-for="genre in genres" :key="genre" class="diagnosis__genreWrapper">\n                        <mark class="diagnosis__genreMark">{{ genre }}</mark><span class="diagnosis__separate">・</span>\n                      </div>\n                  </p>\n                  <a :href="profileLink" class="diagnosis__profileButton -pc" :class="seasonColor">プロフィール</a>\n                </div>\n              </div>\n              <a :href="profileLink" class="diagnosis__profileButton -sp" :class="seasonColor">プロフィール</a>\n        </div>\n    ',props:{typeSource:{type:String},group:{type:String},charaSource:{type:String},personSource:{type:String},moreLink:{type:String},personName:{type:String},profileLink:{type:String},genres:{type:Array}},computed:{seasonColor(){switch(this.group){case"A":return"-spring";case"B":return"-summer";case"C":return"-fall";case"D":return"-winter"}}}}),new Vue({el:"#diagnosis-form",data:()=>({groupA:[{id:"a01",question:"家でゆっくり過ごすより、遊びに出かけるほうが好きです。"},{id:"a02",question:"実際より若く見えるとよく言われます。"},{id:"a03",question:"どんな場面でも臨機応変に対応できます。"},{id:"a04",question:"何かを思いついて始めても、途中で飽きてしまうことが多いです。"}],groupB:[{id:"b01",question:"よく人から相談される方です。"},{id:"b02",question:"どちらかといえば人を引き立てるほうです。"},{id:"b03",question:"人前に立つよりも、人をサポートする方が得意です。"},{id:"b04",question:"細かい作業を人よりも長時間続けることができます。"}],groupC:[{id:"c01",question:"他人の、理屈に合わない言動に対してよくイライラします。"},{id:"c02",question:"ミーティングなどでしばしばリーダーとして選ばれます。"},{id:"c03",question:"人生に目標をもって、精力的に、真剣に生きていくつもりです。"},{id:"c04",question:"仕事や何かの活動の途中で中断して休憩したり、リラックスするのは苦手です。"}],groupD:[{id:"d01",question:"高級な空間や手間のかかった商品に魅力を感じます。"},{id:"d02",question:"生まれついて特別な存在だと感じます。人とは違う存在だと思います。"},{id:"d03",question:"大勢の友人を持つよりも、一人か二人の友人を持つほうがいいです。"},{id:"d04",question:"一人でコツコツと積み上げていくような仕事をするのが好きです。"}],groups:[{name:"A",count:0},{name:"B",count:0},{name:"C",count:0},{name:"D",count:0}],spring:[{group:"A",personName:"江藤有紀",genres:["ビジネス","お金","結婚","夫婦"]}],summer:[{group:"B",personName:"みい",genres:["セカンド","片思い","働き方","お金"]}],fall:[{group:"C",personName:"Saki",genres:["秘密の関係","離婚","借金","親子関係"]}],winter:[{group:"D",personName:"小原彩夏",genres:["復縁","転職","職場","お金"]}],isShowGroupA:!1,isShowGroupB:!1,isShowGroupC:!1,isShowGroupD:!1,showResult:!1}),methods:{toggleChecked(checkedGroupName,checked){let checkedGroup=this.groups.find(group=>group.name===checkedGroupName);checked?(checkedGroup.count+=1,Vue.set(this.groups,checkedGroup)):(checkedGroup.count-=1,Vue.set(this.groups,checkedGroup))},diagnose(){this.isShowGroupA=!1,this.isShowGroupB=!1,this.isShowGroupC=!1,this.isShowGroupD=!1,this.showResult=!0;let counts=this.groups.map((function(groups){return groups.count})),maxValue=Math.max.apply(null,counts),idx=counts.indexOf(maxValue),maxGroup=[];for(;-1!=idx;)maxGroup.push(idx),idx=counts.indexOf(maxValue,idx+1);maxGroup.forEach(g=>{0==g?this.isShowGroupA=!0:1==g?this.isShowGroupB=!0:2==g?this.isShowGroupC=!0:3==g&&(this.isShowGroupD=!0)}),setTimeout((function(){location.href="#diagnosis-result"}),50)}}})}));